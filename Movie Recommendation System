# -*- coding: utf-8 -*-
"""Inernship1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15fObzNAMqLDj1-NFvF1uxplMzU1GSG6k

# Title: Movie Recommendation System

# **Objective**
# The aim of this project is to develop a recommendation system that suggests movies based on a user's input by analyzing textual features and calculating similarities.

# **Data Source**
# The dataset used in this project is sourced from a publicly available repository: 'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/'

# **Import Libraries**
"""

import pandas as pd

import numpy as np

df = pd.read_csv(r'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Movies%20Recommendation.csv')

df.head()

"""# Describe Data"""

df.info()

df.shape

df.columns

"""Data Preprocessing
Define Target Variable (y) and Feature Variables (X)
"""

df_features = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x=df_features['Movie_Genre']+' '+df_features['Movie_Keywords']+' '+df_features['Movie_Tagline']+' '+df_features['Movie_Cast']+' '+df_features['Movie_Director']

x

x.shape

from sklearn.feature_extraction.text import TfidfVectorizer

"""Modeling"""

tfidf=  TfidfVectorizer()

x=tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

Similarity_Score=cosine_similarity(x)

"""**Model Evaluation**"""

Similarity_Score

Similarity_Score.shape

"""**Prediction**"""

Favourite_Movie_Name=input('Enter your favourite movie name:')

All_Movies_Title_List=df['Movie_Title'].tolist()

import difflib

Movie_Recommendation=difflib.get_close_matches(Favourite_Movie_Name,All_Movies_Title_List)
print(Movie_Recommendation)

Close_Match=Movie_Recommendation[0]
print(Close_Match)

Index_of_Close_Match_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

#getting a list of similar movies
Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Close_Match_Movie]))
print(Recommendation_Score)

len(Recommendation_Score)

#sorting the movies based on their similarity score
Sorted_Similar_Movies=sorted(Recommendation_Score,key=lambda x:x[1],reverse=True)
print(Sorted_Similar_Movies)

#print the name of sinilar movies based on tthe index
print('Top 30 movies Suggested for you:\n')
i=1

for movie in Sorted_Similar_Movies:
  index=movie[0]
  title_from_index=df[df.index==index]['Movie_Title'].values[0]
  if(i<31):
    print(i,'.',title_from_index)
    i+=1

Movie_Name=input('Enter your favourite movie name:')
list_of_all_titles=df['Movie_Title'].tolist()
Find_Close_Match=difflib.get_close_matches(Movie_Name,list_of_all_titles)
Close_Match=Find_Close_Match[0]
Index_of_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Movie]))
sorted_similar_movies=sorted(Recommendation_Score,key=lambda x:x[1],reverse=True)
print('Top 10 movies suggested for you:\n')
i=1
for movie in sorted_similar_movies:
  index=movie[0]
  title_from_index=df[df.Movie_ID==index]['Movie_Title'].values
  if(i<11):
    print(i,'.',title_from_index)
    i+=1
