# -*- coding: utf-8 -*-
"""Project at YBI Foundation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zXEd0FBi6ITD3fp77N3zzYN6oDgo3Dz5

**Project : Managing Inventory for a Kirana Store.**
"""

import pandas as pd

# Sample inventory data for a Kirana
data = {
    'Item': ['Rice (kg)', 'Atta (kg)', 'Dal (kg)', 'Sugar (kg)', 'Oil (liter)', 'Spices (pkt)', 'Tea (pkt)', 'Biscuits (pkt)'],
    'Quantity': [100, 80, 50, 60, 30, 100, 50, 12],
    'Price': [60, 40, 120, 45, 180, 30, 80, 26]
}

inventory = pd.DataFrame(data)

# Function to update inventory after a sale
def update_inventory(item, quantity):
    if item in inventory['Item'].values:
        index = inventory[inventory['Item'] == item].index[0]
        if inventory.loc[index, 'Quantity'] >= quantity:
            inventory.loc[index, 'Quantity'] -= quantity
            print(f"{quantity} {item} sold.")
        else:
            print(f"Not enough {item} in stock.")
    else:
        print(f"{item} not found in inventory.")

# Function to generate a bill
def generate_bill(items, quantities):
    total_bill = 0
    print("Bill:")
    for item, quantity in zip(items, quantities):
        if item in inventory['Item'].values:
            index = inventory[inventory['Item'] == item].index[0]
            price = inventory.loc[index, 'Price']
            cost = price * quantity
            print(f"{item}: {quantity} x {price} = {cost:.2f}")
            total_bill += cost
        else:
            print(f"{item} not found in inventory.")
    print(f"Total: {total_bill:.2f}")

# Example usage:
update_inventory('Rice (kg)', 10)
update_inventory('Dal (kg)', 25)
update_inventory('Oil (liter)', 5)

# Generating a bill example
generate_bill(['Rice (kg)', 'Dal (kg)', 'Oil (liter)'], [10, 25, 5])

# Check for low stock (e.g., below 20 units)
low_stock_items = inventory[inventory['Quantity'] < 20]

if not low_stock_items.empty:
    print("\nLow stock alert:")
    for index, row in low_stock_items.iterrows():
        print(f"{row['Item']} is running low.")
else:
    print("All items are sufficiently stocked.")